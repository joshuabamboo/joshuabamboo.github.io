<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Til | My Octopress Blog]]></title>
  <link href="http://joshuabamboo.github.io/blog/categories/til/atom.xml" rel="self"/>
  <link href="http://joshuabamboo.github.io/"/>
  <updated>2014-10-27T23:52:20-04:00</updated>
  <id>http://joshuabamboo.github.io/</id>
  <author>
    <name><![CDATA[Josh Owens]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[TIL Konstantin Haase Rebuilt Sinatra... In 6 Lines!]]></title>
    <link href="http://joshuabamboo.github.io/blog/2014/10/27/til-konstantin-haase-rebuilt-sinatra-dot-dot-dot-in-6-lines/"/>
    <updated>2014-10-27T20:44:47-04:00</updated>
    <id>http://joshuabamboo.github.io/blog/2014/10/27/til-konstantin-haase-rebuilt-sinatra-dot-dot-dot-in-6-lines</id>
    <content type="html"><![CDATA[<p>That&rsquo;s right - 6 Lines. Sinatra is known for being lightweight and flexible.</p>

<p><a href="https://github.com/rkh/almost-sinatra">https://github.com/rkh/almost-sinatra</a></p>

<pre><code class="ruby">    %w.rack tilt date INT TERM..map{|l|trap(l){$r.stop}rescue require l};$u=Date;$z=($u.new.year + 145).abs;puts "== Almost Sinatra/No Version has taken the stage on #$z for development with backup from Webrick"
    $n=Module.new{extend Rack;a,D,S,q=Rack::Builder.new,Object.method(:define_method),/@@ *([^\n]+)\n(((?!@@)[^\n]*\n)*)/m
    %w[get post put delete].map{|m|D.(m){|u,&amp;b|a.map(u){run-&gt;(e){[200,{"Content-Type"=&gt;"text/html"},[a.instance_eval(&amp;b)]]}}}}
    Tilt.mappings.map{|k,v|D.(k){|n,*o|$t||=(h=$u._jisx0301("hash, please");File.read(caller[0][/^[^:]+/]).scan(S){|a,b|h[a]=b};h);v[0].new(*o){n=="#{n}"?n:$t[n.to_s]}.render(a,o[0].try(:[],:locals)||{})}}
    %w[set enable disable configure helpers use register].map{|m|D.(m){|*_,&amp;b|b.try :[]}};END{Rack::Handler.get("webrick").run(a,Port:$z){|s|$r=s}}
    %w[params session].map{|m|D.(m){q.send m}};a.use Rack::Session::Cookie;a.use Rack::Lock;D.(:before){|&amp;b|a.use Rack::Config,&amp;b};before{|e|q=Rack::Request.new e;q.params.dup.map{|k,v|params[k.to_sym]=v}}}
</code></pre>

<p><a href="http://vimeo.com/61087285">http://vimeo.com/61087285</a></p>
]]></content>
  </entry>
  
</feed>
